// ********RoostGPT********
/*
Test generated by RoostGPT for test axway-java-test using AI Type  and AI Model

ROOST_METHOD_HASH=isBinary_6abc9a1b2b
ROOST_METHOD_SIG_HASH=isBinary_6fe2d23b2f

"""
  Scenario 1: Test when the Md5SumMode object is BINARY.

  Details:
    TestName: testIsBinaryWhenObjectIsBinary
    Description: This test is meant to check the condition where the Md5SumMode object is BINARY. In this scenario, the method should return true as per the implemented logic.
  Execution:
    Arrange: Initialize a Md5SumMode object as BINARY.
    Act: Invoke the isBinary() method.
    Assert: Assert the result is true.
  Validation:
    The assertion verifies that the isBinary() method correctly identifies a BINARY Md5SumMode object. The expected result is true because we are confirming that the method accurately identifies a BINARY object. This is significant to ensure that the method can properly distinguish between BINARY and non-BINARY objects and behaves accordingly.

  Scenario 2: Test when the Md5SumMode object is not BINARY.

  Details:
    TestName: testIsBinaryWhenObjectIsNotBinary
    Description: This test is meant to check the condition where the Md5SumMode object is not BINARY. In this scenario, the method should return false as per the implemented logic.
  Execution:
    Arrange: Initialize a Md5SumMode object to any value that is not BINARY.
    Act: Invoke the isBinary() method.
    Assert: Assert the result is false.
  Validation:
    The assertion verifies that the isBinary() method correctly identifies a non-BINARY Md5SumMode object. The expected result is false because we are confirming that the method correctly returns false for non-BINARY objects. This is helpful to make sure that the method not only identifies BINARY objects but also accurately differentiates non-BINARY ones.
"""

*/

// ********RoostGPT********

package com.axway.ats.common.filesystem;

import com.axway.ats.common.PublicAtsApi;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.*;

@PublicAtsApi
public class Md5SumModeIsBinaryTest {

	@Test
    @Tag('valid')
    public void testIsBinaryWhenObjectIsBinary() {
        // Arrange
        Md5SumMode md5SumMode = Md5SumMode.BINARY;
        // Act
        boolean result = md5SumMode.isBinary();
        // Assert
        Assertions.assertTrue(result, "Expected result is true when Md5SumMode object is BINARY");
    }

	@Test
	@Tag
	('valid')public void testIsBinaryWhenObjectIsNotBinary() {
		// Arrange
		Md5SumMode md5SumMode = Md5SumMode.TEXT;
		// Act
		boolean result = md5SumMode.isBinary();
		// Assert
		Assertions.assertFalse(result, "Expected result is false when Md5SumMode object is not BINARY");
	}

}