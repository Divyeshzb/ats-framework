/*
 * Copyright 2017 Axway Software
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
// ********RoostGPT********
/*
Test generated by RoostGPT for test axway-java-test using AI Type  and AI Model

ROOST_METHOD_HASH=getKeyLength_00b7073ae8
ROOST_METHOD_SIG_HASH=getKeyLength_77501aa352

"""
Scenario 1: Validate the function getKeyLength returning the correct key length of the cipher

Details:
  TestName: testValidKeyLengthReturn.
  Description: This test is intended to verify if the getKeyLength method of the SshCipher class is returning the correct key length set for the cipher. As this method directly returns the private variable 'keyLength', it is essential to verify this function's correctness.

Execution:
  Arrange: Create an instance of SshCipher and set a known keyValue using method setKeyLength().
  Act: Invoke the getKeyLength method on the created object.
  Assert: Validate if the returned key length equals the set value.

Validation:
  The assertion is intended to verify if getKeyLength method is correctly returning the key length property of the SshCipher class. The expected result is the value we set using setKeyLength(). This test will validate the getter method's functional behavior.


Scenario 2: Validate the getKeyLength method when no key length is set

Details:
  TestName: testNoKeyLengthSet.
  Description: This test is meant to check if the getKeyLength method returns the default value (0 or a set default) when no explicit key length is set for the cipher.

Execution:
  Arrange: Create an instance of the SshCipher without setting any key length.
  Act: Invoke the getKeyLength method on the created object.
  Assert: Validate if the returned value is 0 (or the default set).

Validation:
  This assertion verifies the getKeyLength method's behavior when no key length has explicitly been set. The expected outcome is 0 (the default java value for an uninitialized int) or a set default, thus ensuring the method handles giving back a default value when none is set.

"""
*/

// ********RoostGPT********

package com.axway.ats.common.filetransfer;

import org.junit.jupiter.api.Assertions;
import org.junit.jupiter.api.Tag;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.*;
import java.io.Serializable;
import com.axway.ats.common.PublicAtsApi;

public class SshCipherGetKeyLengthTest {

	@Test
	@Tag("valid")
	public void testValidKeyLengthReturn() {
		// Arrange
		SshCipher cipher = new SshCipher("aes128-cbc", "AES/CBC/NoPadding", "BC", 16, 16);
		cipher.setKeyLength(16);
		// Act
		int returnedKeyLength = cipher.getKeyLength();
		// Assert
		Assertions.assertEquals(16, returnedKeyLength,
				"Key length returned by getKeyLength() does not match the set value");
	}

	@Test
	@Tag("boundary")
	public void testNoKeyLengthSet() {
		// Arrange
		SshCipher cipher = new SshCipher("aes128-cbc", "AES/CBC/NoPadding", "BC", 16, 0);
		// Act
		int returnedKeyLength = cipher.getKeyLength();
		// Assert
		Assertions.assertEquals(0, returnedKeyLength,
				"getKeyLength() should return 0 as key length when no key length is set");
	}

}